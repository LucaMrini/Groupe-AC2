
gdpcut<- read.csv("data/luca/demo_clean.csv")
gdpcut <- gdpcut[, c("Country.Name", "Country.Code", paste0("X", 1990:2020))]
gdpcut_unique <- gdpcut[!duplicated(gdpcut$Country.Name), c("Country.Name", "Country.Code", paste0("X", 1990:2020))]

columns_to_convert <- paste0("X", 1990:2020)



for (col in columns_to_convert) {

  gdpcut_unique[[col]] <- as.numeric(gsub("'", "", as.character(gdpcut_unique[[col]])))
}


for (col in columns_to_convert) {
  gdpcut_unique[[col]] <- as.numeric(as.character(gdpcut_unique[[col]]))
}

gdp_data <- gdpcut_unique

library(shiny)
library(ggplot2) 
library(plotly) 


ui <- fluidPage(
  titlePanel("GDP Data Exploration"),
  sidebarLayout(
    sidebarPanel(
      sliderInput("year", "Select Year", min = 1990, max = 2020, value = 1990)
    ),
    mainPanel(
      plotlyOutput("barplot", height = "600px", width = "800px") #
  )
)


server <- function(input, output) {
  
  # Function to generate bar plot for selected year
  output$barplot <- renderPlotly({
    year_col <- paste0("X", input$year) # Get column name for the selected year
    gdp_subset <- gdp_data[, c("Country.Name", year_col)] # Subset data for selected year
    
    # Remove NA values from the selected year's GDP column only
    gdp_subset <- gdp_subset[complete.cases(gdp_subset[[year_col]]), ]
    gdp_subset <- gdp_subset[order(-gdp_subset[[year_col]]), ] # Order by GDP
    
    # Select top 50 values after sorting by GDP
    top_50 <- head(gdp_subset, 50)
    
    # Create the horizontal bar plot using ggplot and convert it to a plotly object for interactivity
    p <- ggplot(top_50, aes(x = reorder(Country.Name, top_50[[year_col]]), y = top_50[[year_col]])) +
      geom_bar(stat = "identity", fill = "skyblue") +
      labs(title = paste("Top 50 GDP for the year", input$year),
           x = "Country", y = "GDP Value") +
      theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
      coord_flip() # Flip coordinates for horizontal bars
    
    # Convert ggplot to plotly with customized hover information
    ggplotly(p, tooltip = c("y")) %>%
      layout(hoverlabel = list(bgcolor = "white", bordercolor = "black", font = list(family = "Arial, sans-serif")))
  })
}

# Run the Shiny app
shinyApp(ui = ui, server = server)

