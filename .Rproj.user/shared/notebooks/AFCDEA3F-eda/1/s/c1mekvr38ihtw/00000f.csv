"0","#| context: server"
"0","library(plotly)"
"0","gdpcut<- read.csv(""data/luca/demo_clean.csv"")"
"0","gdpcut <- gdpcut[, c(""Country.Name"", ""Country.Code"", paste0(""X"", 1990:2020))]"
"0","gdpcut_unique <- gdpcut[!duplicated(gdpcut$Country.Name), c(""Country.Name"", ""Country.Code"", paste0(""X"", 1990:2020))]"
"0",""
"0","columns_to_convert <- paste0(""X"", 1990:2020)"
"0",""
"0","for (col in columns_to_convert) {"
"0",""
"0","  gdpcut_unique[[col]] <- as.numeric(gsub(""'"", """", as.character(gdpcut_unique[[col]])))"
"0","}"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"0","for (col in columns_to_convert) {"
"0","  gdpcut_unique[[col]] <- as.numeric(as.character(gdpcut_unique[[col]]))"
"0","}"
"0",""
"0","gdp_data <- gdpcut_unique"
"0",""
"0","ui <- fluidPage("
"0","  titlePanel(""GDP Data Exploration""),"
"0","  sidebarLayout("
"0","    sidebarPanel("
"0","      sliderInput(""year"", ""Select Year"", min = 1990, max = 2020, value = 1990)"
"0","    ),"
"0","    mainPanel("
"0","      plotlyOutput(""barplot"", height = ""600px"", width = ""800px"")"
"0","    )"
"0","  )"
"0",")"
"0","server <- function(input, output) {"
"0",""
"0",""
"0","output$barplot <- renderPlotly({"
"0","  year_col <- paste0(""X"", input$year)"
"0","  gdp_subset <- gdp_data[, c(""Country.Name"", year_col)]"
"0","  gdp_subset <- gdp_subset[complete.cases(gdp_subset[[year_col]]), ]"
"0","  gdp_subset <- gdp_subset[order(-gdp_subset[[year_col]]), ]"
"0","  top_50 <- head(gdp_subset, 50)"
"0","  "
"0","  countries_to_highlight <- c(""United Kingdom"", ""France"", ""Germany"", ""Spain"", ""Italy"")"
"0","  "
"0","  p <- ggplot(top_50, aes(x = reorder(Country.Name, top_50[[year_col]]), y = top_50[[year_col]])) +"
"0","    geom_bar(stat = ""identity"", fill = ifelse(top_50$Country.Name %in% countries_to_highlight, ""red"", ""skyblue"")) +"
"0","    labs(title = paste(""Top 50 GDP for the year"", input$year),"
"0","         x = ""Country"", y = ""GDP per capita in $"") +"
"0","    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +"
"0","    coord_flip()"
"0","  "
"0","  ggplotly(p, tooltip = c(""y"")) %>%"
"0","    layout(hoverlabel = list(bgcolor = ""white"", bordercolor = ""black"", font = list(family = ""Arial, sans-serif"")))"
"0","})"
"0","}"
"0",""
"0","shinyApp(ui = ui, server = server)"
"2","
Listening on http://127.0.0.1:3071
"
