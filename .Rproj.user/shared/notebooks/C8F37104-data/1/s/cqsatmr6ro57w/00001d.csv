"0","#read doc use the fourth raw as headers then ommit the last column which is empty"
"0","#Do I keep until 2022 ?"
"0","demo_raw <- read.csv(""data/luca/demo.csv"", header = TRUE, skip = 3)"
"0","subset_demo_raw <- demo_raw[, c(""Country.Name"", ""Country.Code"", paste0(""X"", 1990:2022))]"
"0",""
"0","new_column_names <- gsub(""^X"", ""pop"", names(subset_demo_raw)[-(1:2)])  "
"0","subset_demo_raw <- subset_demo_raw%>%"
"0","  rename_with(~ new_column_names, matches(""^X""))"
"0",""
"0",""
"0","gdp_raw <- read.csv(""data/luca/gdp_per_capita.csv"") %>%"
"0","  select(-ncol(.)) %>%"
"0","  rename(Country.Code = Code)"
"0","subset_gdp_raw <- gdp_raw[, c(""Country.Name"", ""Country.Code"", paste0(""X"", 1990:2020))]"
"0",""
"0","#removed a column "
"0","subset_country <- left_join(subset_demo_raw, subset_gdp_raw, by = ""Country.Code"") %>%"
"0","  select(-matches(""Country.Name.y""))"
"0",""
"0","#problem country code of data1"
"0","data1 <- read.csv(""data/baseplayer.csv"")"
"0","subset_data1 <- select(data1, Player, Nation) %>%"
"0","rename(Country.Code = Nation)"
"0",""
"0","#rows_with_na <- subset(demo_clean, apply(is.na(demo_clean), 1, any)) to find the missing values "
"0","specific_codes <- c("
"0","  ""ENG"", ""SCO"", ""REU"",""GAM"", ""GUI"",  ""TOG"", ""GER"","
"0","  ""ALG"", ""NED"",  ""CRO"", ""DEN"", ""URU"", ""ZAM"", ""MTQ"","
"0","  ""HON"", ""SUI"", ""POR"", ""PHI"",  ""WAL"",   ""ZIM"","
"0","  ""CTA"",  ""RSA"", ""KVX"", ""CHA"", ""ANG"",  ""PAR"")"
"0",""
"0","actual_codes <- c("
"0","  ""GBR"",""GBR"",""FRA"",""GMB"",""GIN"",""TGO"","
"0","  ""DEU"",""DZA"",""NLD"",""HRV"",""DNK"",""URY"","
"0","  ""ZMB"",""FRA"",""HND"",""CHE"",""PRT"",""PHL"",""GBR"","
"0","  ""ZWE"",""CAF"",""ZAF"",""XKX"",""TCD"",""AGO"",""PRY"")"
"0","# Create a lookup table"
"0","lookup_table <- setNames(actual_codes, specific_codes)"
"0","subset_data1$Country.Code <- ifelse(subset_data1$Country.Code %in% names(lookup_table), lookup_table[subset_data1$Country.Code], subset_data1$Country.Code)"
"0","demo_clean <- left_join(subset_data1,subset_country,by = ""Country.Code"") %>%"
"0","  rename(Country.Name = Country.Name.x)"
"0","# Example: Applying thousands separator to numeric columns in demo_clean"
"0","demo_clean <- demo_clean"
"0","demo_clean[] <- lapply(demo_clean, function(x) {"
"0","  if (is.numeric(x)) {"
"0","    format(x, big.mark = ""'"", scientific = FALSE)"
"0","  } else {"
"0","    x"
"0","  }"
"0","})"
"0","reactable("
"0","  demo_clean,"
"0","  searchable = TRUE,"
"0","  striped = TRUE,"
"0","  highlight = TRUE,"
"0","  bordered = TRUE,"
"0","  theme = reactableTheme("
"0","    borderColor = ""#dfe2e5"","
"0","    stripedColor = ""#f6f8fa"","
"0","    highlightColor = ""#f0f5f9"","
"0","    cellPadding = ""8px 12px"","
"0","    style = list("
"0","      fontFamily = ""-apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif"","
"0","      "".rt-td"" = list("
"0","        ""min-width"" = ""200px"",  # Adjust the minimum width of cells"
"0","        ""max-width"" = ""400px""   # Adjust the maximum width of cells"
"0","      )"
"0","    ),"
"0","    searchInputStyle = list(width = ""100%"")"
"0","  )"
"0",")"
